begin_globals {
};




begin_initialization {
  // Numerical settings
  num_step = 5;
  status_interval = 1000;                 // Basically don't print status
  sync_shared_interval = status_interval;
  clean_div_e_interval = status_interval;
  clean_div_b_interval = status_interval;

  int gnx = nproc();
  int gny = 2; // Would love to make this 1 as well, but then I get weird NaNs...
  int gnz = 1;

  int topox = nproc();
  int topoy = 1;
  int topoz = 1;

  int nppc = 100;

  // use natural PIC units
  float ec   = 1;        // Charge normalization
  float me   = 1;        // Mass normalization
  float c    = 1;        // Speed of light
  float de   = 1;        // Length normalization (electron inertial length)
  float eps0 = 1;        // Permittivity of space

  // physics settings
  float dx     = 0.125; // d_e
  float dt     = dx * 0.95/sqrt(3.0)/c;
  float Lx     = dx * gnx;
  float Ly     = dx * gny;
  float Lz     = dx * gnz;

  // Setup stuff in vpic
  define_units(c, eps0);
  define_timestep(dt);

  define_periodic_grid(0,0,0,              // Low corner
                       Lx,Ly,Lz,           // High corner
                       gnx,gny,gnz,        // Resolution
                       topox,topoy,topoz); // Topology

  // Space is by default filled with first material defined
  define_material("vacuum",1.0);

  // Create the field array
  define_field_array(NULL, 0.00);

  // Just a homogeneous value in Bx
  set_region_field(everywhere, 5., 6., 7., 17., 18., 19.);

  // different random numbers on different ranks
  seed_entropy(rank());

  // Note: No particles. This is fine for field tests, but we need to come up
  // with something better for tests of hydro output and particle dumps

  // Deck only works if VPIC was build with HDF support. Check for that:
  #ifndef VPIC_ENABLE_HDF5
  #error "VPIC_ENABLE_HDF5" is required
  #endif

  // Explicitly enable HDF5 backend for IO dump
  enable_hdf5_dump();
}


begin_diagnostics {
// The equations are only evaluated inside the mesh-mapped region
// (This is not strictly inside the region)

  set_region_field(everywhere, 5., 6., 7., 17., 18., 19.);
  dump_fields("fields");

  // Force a restart after step 1 to make sure that dump/restart works too
  if(step() == 1) {
      sim_log("Force restart");
      dump_mkdir("restart0");
      char fname[256];
      sprintf(fname, "%s/restore.0.%i", "restart0", world_rank );
      checkpt_objects(fname);
      sim_log("Restart dump restart completed.");
      mp_barrier();
  }

  // If we reach this in the last step without any fails we probably did well enough
  if(step() == num_step) {
    sim_log("passed");
  }
}

begin_particle_injection {
}

begin_current_injection {
}

begin_field_injection {
}

begin_particle_collisions {
}


